import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import Navbar from '../../components/navbar'
import next, { NextApiResponse, NextApiRequest } from "next"
import getServices from '../../lib/getServices'
import { Console, debug } from "console"
const inter = Inter({ subsets: ['latin'] })
import PlaceholderImg from "../../public/ImgSldShow1.png"
import { title } from 'process'
import { param } from 'jquery'

interface Service {
  id: string;
  title: string;
  image: string;
  desc: string;
  outside: boolean;
}

export default function Home({ service }: { service: any }) {

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>



      <Navbar title="service">

      </Navbar>

      <main className={styles.main} style={{paddingBottom:"10%"}}>
        <Image src={PlaceholderImg} alt={"/"} style={{ width: '80%', marginTop:"25px" }} />

        <div className={styles.IndexGenericTitle} style={{marginBottom:'20px'}}>
          {service.title}
          <div className={styles.IndexGenericTitleBar} />
        </div>
        <section style={{ color: 'black', width:"50%", fontSize:"larger"}}>
          Lorem ipsum, dolor sit amet consectetur adipisicing elit. Incidunt, dicta. Dicta, impedit odit magni quisquam, tempore.
          {service.desc}
        </section>

        <a style={{position:'relative'}} href={"/realisations?tag="+service.title} className={styles.servicesBodyButton}> Voir tout nos r√©alisations de {service.title}</a>
      </main>
    </>
  )

}

export async function getStaticProps({ params }: { params: any }) {
  const response = await getServices()
  const data = response.map(item => ({ id: item.Id.toString(), title: item.Title, image: item.ImageUrl, desc: item.Description, outside: item.Outside }))

  console.log(params);
  

  const service = data.find(item => item.title === params.default)

  return {
    props: {
      service 
    }
  }
}

export async function getStaticPaths() {
  const response = await getServices()
  const data = response.map(item => ({ id: item.Id.toString(), title: item.Title, image: item.ImageUrl, desc: item.Description, outside: item.Outside }))

  const paths = data.map(item => {


    return {
      params: {
        default: item.title
      }
    }
  })

  return {
    paths,
    fallback: false
  }
}

